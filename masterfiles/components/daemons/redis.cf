# REDIS
#

body file control
{
  namespace => "redis";
     inputs => {
                "$(inputs:components.common[class])",
                "$(inputs:components.common[package])",
                "$(inputs:components.common[service])",
               };
}

bundle agent config(info)
{
  meta:
      "tags"         slist => { "config" };

  vars:
      "version"     string => "$(info[version])",
                ifvarclass => isvariable("info[version]");
}

bundle agent validate
{
  meta:
      "tags"            slist => { "validation" };

  classes:
      "version_error"
             not => isvariable("redis:config.version");

      "validation_ok"
             and => { "!version_error",
                    },
           scope => "namespace";

  reports:
    version_error::
      "ERROR: redis:config version is missing";
}

bundle agent control
{
  meta:
      "tags"             slist => { "control" };

  classes:
      "error"
              or => { "$(package[error])" },
           scope => "namespace";

    !error::
      "ok"
             and => { "$(package[ok])" },
           scope => "namespace";

    ok::
      "repaired"
              or => { "$(package[repaired])" },
           scope => "namespace";

      "kept"
             and => { "$(package[kept])" },
           scope => "namespace";

  methods:
      "package"         usebundle => package:yum_addupdate('{
        "name":         "redis",
        "version":      "$(config.version)"
      }');

  services:
      "redis"
      service_policy => "start",
      service_method => service:chkconfig,
             classes => class:local("service");
}
